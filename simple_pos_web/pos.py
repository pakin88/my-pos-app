import streamlit as st
import pandas as pd
from datetime import datetime
from streamlit_option_menu import option_menu
income_file = "income.csv"
expense_file = "expense.csv"
water_file = "water.csv"
waterpun_file = "waterpun.csv"
snack_file = "snack.csv"
burger_file = "burger.csv"
stock_file = "stock.csv"
st.set_page_config(
    page_title="POS ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢",   # ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
    page_icon="üíµ",                     # ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏ß‡πá‡∏ö
    layout="centered"                  # ‡∏´‡∏£‡∏∑‡∏≠ "wide"
)

# ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ

def load_stock(file):
    try:
        return pd.read_csv(file, encoding='utf-8-sig')
    except FileNotFoundError:
        return pd.DataFrame(columns=[ "item", "price"])    


def load_data(file):
    try:
        return pd.read_csv(file, encoding='utf-8-sig')
    except FileNotFoundError:
        return pd.DataFrame(columns=["date", "item", "amount"])


# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á CSV
def save_data(file, df):
    df.to_csv(file, index=False, encoding='utf-8-sig')


def clear_income_input(key1,key2):
    st.session_state[key1] = ""
    st.session_state[key2] = 0.0

menu = st.sidebar.selectbox("‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å", ["‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö", "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢","‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î"])

if menu == "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤":
    st.subheader("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")
    item = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",key = "input_item")
    price = st.number_input("‡∏£‡∏≤‡∏Ñ‡∏≤", min_value=0,key = "input_price")
    source_type = st.selectbox("‡∏Ç‡∏≠‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ç‡∏≤‡∏¢", ["‡∏Ç‡∏≠‡∏á‡∏ã‡∏∑‡πâ‡∏≠", "‡∏Ç‡∏≠‡∏á‡∏Ç‡∏≤‡∏¢"])
    if source_type == "‡∏Ç‡∏≠‡∏á‡∏Ç‡∏≤‡∏¢":
        tpye_item = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",["‡∏ô‡πâ‡∏≥","‡∏ô‡πâ‡∏≥‡∏õ‡∏±‡πà‡∏ô","‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå","‡∏Ç‡∏ô‡∏°"],horizontal=True,index=None)
        if tpye_item == "‡∏ô‡πâ‡∏≥":
            if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
                df = load_stock(water_file)
                df.loc[len(df)] = [item, price]
                save_data(water_file, df)
                st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
        if tpye_item == "‡∏ô‡πâ‡∏≥‡∏õ‡∏±‡πà‡∏ô":
            if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
                df = load_stock(waterpun_file)
                df.loc[len(df)] = [item, price]
                save_data(waterpun_file, df)
                st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
        if tpye_item == "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå":
            if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
                df = load_stock(burger_file)
                df.loc[len(df)] = [item, price]
                save_data(burger_file, df)
                st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
        if tpye_item == "‡∏Ç‡∏ô‡∏°":
            if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
                df = load_stock(snack_file)
                df.loc[len(df)] = [item, price]
                save_data(snack_file, df)
                st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
    if source_type == "‡∏Ç‡∏≠‡∏á‡∏ã‡∏∑‡πâ‡∏≠":
        if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"):
            df = load_stock(stock_file)
            df.loc[len(df)] = [item, price]
            save_data(stock_file, df)
            st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß")
if menu == "‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö":
    st.subheader("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")

    tpye_item = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà",["‡∏ô‡πâ‡∏≥","‡∏ô‡πâ‡∏≥‡∏õ‡∏±‡πà‡∏ô","‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå","‡∏Ç‡∏ô‡∏°"],horizontal=True)
    if tpye_item == "‡∏ô‡πâ‡∏≥":
        stock_df = load_stock(water_file)
        item_names = stock_df["item"].tolist()
        item = st.selectbox("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",item_names, key="income_item")
        qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠", min_value=1, key="buy_qty")
        if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢"):
            price = stock_df.loc[stock_df["item"] == item, "price"].values[0]
            total = price * qty
            df = load_data(income_file)
            df.loc[len(df)] = [datetime.now().strftime("%Y-%m-%d %H:%M:%S"), item, total]
            save_data(income_file, df)
            st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ {item} x {qty} = {total} ‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß")        
    if tpye_item == "‡∏ô‡πâ‡∏≥‡∏õ‡∏±‡πà‡∏ô":
        stock_df = load_stock(waterpun_file)
        item_names = stock_df["item"].tolist()
        item = st.selectbox("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",item_names, key="income_item")
        qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠", min_value=1, key="buy_qty")
        if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢"):
            price = stock_df.loc[stock_df["item"] == item, "price"].values[0]
            total = price * qty
            df = load_data(income_file)
            df.loc[len(df)] = [datetime.now().strftime("%Y-%m-%d %H:%M:%S"), item, total]
            save_data(income_file, df)
            st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ {item} x {qty} = {total} ‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß")        
    if tpye_item == "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏≠‡∏£‡πå":
        stock_df = load_stock(burger_file)
        item_names = stock_df["item"].tolist()
        item = st.selectbox("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",item_names, key="income_item")
        qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠", min_value=1, key="buy_qty")
        if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢"):
            price = stock_df.loc[stock_df["item"] == item, "price"].values[0]
            total = price * qty
            df = load_data(income_file)
            df.loc[len(df)] = [datetime.now().strftime("%Y-%m-%d %H:%M:%S"), item, total]
            save_data(income_file, df)
            st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ {item} x {qty} = {total} ‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß")        
    if tpye_item == "‡∏Ç‡∏ô‡∏°":
        stock_df = load_stock(snack_file)
        item_names = stock_df["item"].tolist()
        item = st.selectbox("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",item_names, key="income_item")
        qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠", min_value=1, key="buy_qty")
        if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢"):
            price = stock_df.loc[stock_df["item"] == item, "price"].values[0]
            total = price * qty
            df = load_data(income_file)
            df.loc[len(df)] = [datetime.now().strftime("%Y-%m-%d %H:%M:%S"), item, total]
            save_data(income_file, df)
            st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ {item} x {qty} = {total} ‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß")        


if menu == "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢":
    st.subheader("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤")

    stock_df = load_stock(stock_file)
    item_names = stock_df["item"].tolist()

    selected_item = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", item_names, key="expense_item")
    qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠", min_value=1, key="buy_qty")

    if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢"):
        price = stock_df.loc[stock_df["item"] == selected_item, "price"].values[0]
        total = price * qty

        df = load_data(expense_file)

        df.loc[len(df)] = [datetime.now().strftime("%Y-%m-%d %H:%M:%S"), selected_item, total]
        save_data(expense_file, df)

        st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢ {selected_item} x {qty} = {total} ‡∏ö‡∏≤‡∏ó‡πÅ‡∏•‡πâ‡∏ß")

if menu == "‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î":
    st.subheader("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢")


    income_df = load_data(income_file)
    expense_df = load_data(expense_file)

    total_income = income_df["amount"].sum()
    total_expense = expense_df["amount"].sum()

    st.metric("‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏£‡∏ß‡∏°", f"{total_income:,.2f} ‡∏ö‡∏≤‡∏ó")
    st.metric("‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°", f"{total_expense:,.2f} ‡∏ö‡∏≤‡∏ó")
    st.metric("‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠", f"{total_income - total_expense:,.2f} ‡∏ö‡∏≤‡∏ó")

    st.markdown("### üìù ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö")
    income_df = income_df.reset_index(drop=True)
    income_df.index += 1
    income_df.index.name = "‡∏•‡∏≥‡∏î‡∏±‡∏ö"
    st.dataframe(income_df)

    st.markdown("### üìù ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢")
    expense_df = expense_df.reset_index(drop=True)
    expense_df.index += 1
    expense_df.index.name = "‡∏•‡∏≥‡∏î‡∏±‡∏ö"
    st.dataframe(expense_df)


if menu == "‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î":
    st.subheader("üìä ‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°‡∏£‡∏∞‡∏ö‡∏ö POS")
    
    income_df = load_data(income_file)
    expense_df = load_data(expense_file)

    total_income = income_df["amount"].sum()
    total_expense = expense_df["amount"].sum()
    net_profit = total_income - total_expense

    col1, col2, col3 = st.columns(3)
    col1.metric("üí∞ ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", f"{total_income:,.2f} ‡∏ö‡∏≤‡∏ó")
    col2.metric("üí∏ ‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", f"{total_expense:,.2f} ‡∏ö‡∏≤‡∏ó")
    col3.metric("üìà ‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥", f"{net_profit:,.2f} ‡∏ö‡∏≤‡∏ó", delta=f"{net_profit:,.2f}")



    st.markdown("### üìÜ ‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö-‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô")
    # ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
    income_df["date"] = pd.to_datetime(income_df["date"]).dt.date
    expense_df["date"] = pd.to_datetime(expense_df["date"]).dt.date

    income_daily = income_df.groupby("date")["amount"].sum()
    expense_daily = expense_df.groupby("date")["amount"].sum()

    daily_df = pd.DataFrame({
        "‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö": income_daily,
        "‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢": expense_daily
    }).fillna(0)

    st.line_chart(daily_df)

    st.markdown("### üßæ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")
    income_df = income_df.reset_index(drop=True)
    income_df.index += 1
    income_df.index.name = "‡∏•‡∏≥‡∏î‡∏±‡∏ö"
    st.write("**‡∏£‡∏≤‡∏¢‡∏£‡∏±‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:**")
    st.dataframe(income_df.tail(5).reset_index(drop=True))

    st.write("**‡∏£‡∏≤‡∏¢‡∏à‡πà‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:**")
    expense_df = expense_df.reset_index(drop=True)
    expense_df.index += 1
    expense_df.index.name = "‡∏•‡∏≥‡∏î‡∏±‡∏ö"
    st.dataframe(expense_df.tail(5).reset_index(drop=True))
